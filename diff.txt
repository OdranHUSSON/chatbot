diff --git a/pages/chat/[chatId].tsx b/pages/chat/[chatId].tsx
index 2d8ddb3..58647fb 100644
--- a/pages/chat/[chatId].tsx
+++ b/pages/chat/[chatId].tsx
@@ -41,7 +41,7 @@ export default function Chat(props: { apiKeyApp: string, socket: typeof SocketIO
 	useEffect(() => {
         if (chatId) {
             setIsLoading(false);
-			fetchChatHistory(chatId)
+			fetchChatHistory(chatId as string) 
         }
     }, [chatId]);
 
@@ -100,6 +100,7 @@ export default function Chat(props: { apiKeyApp: string, socket: typeof SocketIO
 					setInputCode={setInputCode}
 					handleChat={handleChat}
 					loading={loading}
+					chatId={chatId as string}
 				/>
 			</Flex>
 		</Flex>
diff --git a/pages/index.tsx b/pages/index.tsx
index 4318a3e..87640bc 100644
--- a/pages/index.tsx
+++ b/pages/index.tsx
@@ -45,7 +45,8 @@ export default function Index(props: { apiKeyApp: string, socket: typeof SocketI
 		loading, 
 		setLoading, 
 		clearChatHistory, 
-		handleChat 
+		handleChat ,
+		chatId
 	} = useChat(props.apiKeyApp, props.socket);
 
 	const { apiKeyApp } = props;
@@ -103,6 +104,7 @@ export default function Index(props: { apiKeyApp: string, socket: typeof SocketI
 					setInputCode={setInputCode}
 					handleChat={handleChat}
 					loading={loading}
+					chatId={chatId as string}
 				/>
 			</Flex>
 		</Flex>
diff --git a/src/components/chat/ChatActions.tsx b/src/components/chat/ChatActions.tsx
index 03c54e9..2965ab7 100644
--- a/src/components/chat/ChatActions.tsx
+++ b/src/components/chat/ChatActions.tsx
@@ -22,7 +22,11 @@ import { GitDrawer } from '../git/GitDrawer';
 import { truncateMessages } from '@/utils/messages';
 import { useColorModeValue } from '@chakra-ui/react';
 
-const ChatActions: FC<ChatActionsProps> = () => {
+interface ChatActionsProps {
+  chatId: string;
+}
+
+const ChatActions: FC<ChatActionsProps> = ({ chatId }) => {
   const [isFileModalOpen, setisFileModalOpen] = useState(false);
   const [modalComponent, setModalComponent] = useState('fileread');
   const [truncating, setTruncating] = useState(false);
@@ -34,7 +38,7 @@ const ChatActions: FC<ChatActionsProps> = () => {
 
   const handleTruncateMessages = async () => {
     setTruncating(true);
-    await truncateMessages();
+    await truncateMessages(chatId);
     setTruncating(false);
     setIsDrawerOpen(false);
   };
@@ -65,6 +69,7 @@ const ChatActions: FC<ChatActionsProps> = () => {
         isOpen={isFileModalOpen}
         onClose={onFileModalClose}
         component={modalComponent}
+        chatId={chatId}
       />
       <Button
         transition='all 0.2s'
diff --git a/src/components/chat/ChatInput.tsx b/src/components/chat/ChatInput.tsx
index 607af5e..8d3885a 100644
--- a/src/components/chat/ChatInput.tsx
+++ b/src/components/chat/ChatInput.tsx
@@ -7,6 +7,7 @@ interface ChatInputProps {
   setInputCode: (value: string) => void;
   handleChat: () => void;
   loading: boolean;
+  chatId: string;
 }
 
 const ChatInput: FC<ChatInputProps> = ({
@@ -14,6 +15,7 @@ const ChatInput: FC<ChatInputProps> = ({
   setInputCode,
   handleChat,
   loading,
+  chatId
 }) => {
   const inputColor = useColorModeValue('navy.700', 'white');
   const placeholderColor = useColorModeValue(
@@ -49,7 +51,7 @@ const ChatInput: FC<ChatInputProps> = ({
       onSubmit={(e) => e.preventDefault()}
       align={"center"}
     >
-      <ChatActions />
+      <ChatActions chatId={chatId}/>
       <Input
         placeholder='Type your message here...'
         onKeyDown={handleKeyDown}
diff --git a/src/components/git/FileToChat.tsx b/src/components/git/FileToChat.tsx
index 1323e79..2c89dcd 100644
--- a/src/components/git/FileToChat.tsx
+++ b/src/components/git/FileToChat.tsx
@@ -10,9 +10,10 @@ interface RepoDetailsProps {
   onRemove: () => void;
   fileContent: string;
   closeModal: () => void;
+  chatId: string;
 }
 
-const FileToChat: React.FC<RepoDetailsProps> = ({ repoName, onRemove , closeModal }) => {
+const FileToChat: React.FC<RepoDetailsProps> = ({ repoName, onRemove , closeModal, chatId }) => {
   const [contents, setContents] = useState<any[]>([]);
   const [currentDir, setCurrentDir] = useState('.');
   const [loading, setLoading] = useState(false);
@@ -46,8 +47,8 @@ const FileToChat: React.FC<RepoDetailsProps> = ({ repoName, onRemove , closeModa
       const data = await GitClient.getInstance().readFile(selectedFile!, repoName);
   
       if (data.success) {
-        await createUserMessage("Provide me the code of " + selectedFile); 
-        await createBotMessage('```\n' + data.content + '\n```\n'); 
+        await createUserMessage("Provide me the code of " + selectedFile, chatId); 
+        await createBotMessage('```\n' + data.content + '\n```\n', chatId); 
       } else {
         toast({
           title: "Error",
diff --git a/src/components/git/GitDrawer.tsx b/src/components/git/GitDrawer.tsx
index 36a9e90..9088024 100644
--- a/src/components/git/GitDrawer.tsx
+++ b/src/components/git/GitDrawer.tsx
@@ -20,7 +20,7 @@ import GitCommit from './GitCommit';
 import { MdMemory } from 'react-icons/md';
 import { useColorModeValue } from '@chakra-ui/react';
 
-export const GitDrawer = ({ isOpen, onClose, component }) => {
+export const GitDrawer = ({ isOpen, onClose, component, chatId }) => {
   const [repos, setRepos] = useState<string[]>([]);
   const [loading, setLoading] = useState(false);
   const [selectedRepo, setSelectedRepo] = useState<string | null>(null);
@@ -84,7 +84,7 @@ export const GitDrawer = ({ isOpen, onClose, component }) => {
               <GitCommit repo={selectedRepo} />
             )}
             {component === 'fileread' && (
-              <FileToChat repoName={selectedRepo} closeModal={onClose} onRemove={handleRepoRemove} />
+              <FileToChat repoName={selectedRepo} closeModal={onClose} onRemove={handleRepoRemove} chatId={chatId} />
             )}
           </Box>
         ) : (
diff --git a/src/utils/useChat.ts b/src/utils/useChat.ts
index 7244043..160a9ab 100644
--- a/src/utils/useChat.ts
+++ b/src/utils/useChat.ts
@@ -265,6 +265,7 @@ export const useChat = (apiKeyApp: string, socket: typeof SocketIOClient.Socket
         handleChat,
         addUserMessageToChatHistory,
         addBotMessageToChatHistory,
-        fetchChatHistory
+        fetchChatHistory,
+        chatId
     };
 }
